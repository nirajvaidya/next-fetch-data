{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/admin-pc/Documents/NEXTJS/next-fetch-data/pages/posts/[id].js\";\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nexport default function Post({\n  postData\n}) {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Page Data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Hello I am from [id]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n} // Post.getInitialProps = async ({ query }) => {\n//   const { id } = query;\n//   return { id };\n// };\n// 1.\n\nexport async function getStaticPaths() {\n  const paths = [{\n    params: {\n      id: \"1\"\n    }\n  }, {\n    params: {\n      id: \"2\"\n    }\n  }, {\n    params: {\n      id: \"5\"\n    }\n  }];\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  query,\n  params\n}) {\n  const {\n    id\n  } = query || params;\n  console.log({\n    id\n  });\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/posts/\" + id);\n  const postData = await res.json();\n  return {\n    props: {\n      postData\n    }\n  };\n}\n/*\nexport async function getServerSideProps({ query }) {\n  const { id } = query;\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/posts/\" + id);\n  const postData = await res.json();\n  return {\n    props: {\n      postData,\n    },\n  };\n}\n*/","map":{"version":3,"sources":["/home/admin-pc/Documents/NEXTJS/next-fetch-data/pages/posts/[id].js"],"names":["React","useRouter","Post","postData","router","isFallback","getStaticPaths","paths","params","id","fallback","getStaticProps","query","console","log","res","fetch","json","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA4B;AACzC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;;AACA,MAAIG,MAAM,CAACC,UAAX,EAAuB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,2BAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;AACA;AAEA;AACA;AAEA;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,KAAK,GAAG,CACZ;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAE;AAAN;AAAV,GADY,EAEZ;AAAED,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAE;AAAN;AAAV,GAFY,EAGZ;AAAED,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAE;AAAN;AAAV,GAHY,CAAd;AAMA,SAAO;AACLF,IAAAA,KADK;AAELG,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA,KAAF;AAASJ,EAAAA;AAAT,CAA9B,EAAiD;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAASG,KAAK,IAAIJ,MAAxB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,IAAAA;AAAF,GAAZ;AAEA,QAAMM,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAgDP,EAAjD,CAAvB;AACA,QAAMN,QAAQ,GAAG,MAAMY,GAAG,CAACE,IAAJ,EAAvB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLf,MAAAA;AADK;AADF,GAAP;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\n\nexport default function Post({ postData }) {\n  const router = useRouter();\n  if (router.isFallback) {\n    return <div>Loading Page Data...</div>;\n  }\n  return (\n    <div>\n      {/* <img src={\"/images/posts/\" + postData.id + \".jpeg\"} />\n      <h2>{postData.title}</h2>\n      <p>{postData.body}</p> */}\n      <h1> Hello I am from [id]</h1>\n    </div>\n  );\n}\n\n// Post.getInitialProps = async ({ query }) => {\n//   const { id } = query;\n\n//   return { id };\n// };\n\n// 1.\nexport async function getStaticPaths() {\n  const paths = [\n    { params: { id: \"1\" } },\n    { params: { id: \"2\" } },\n    { params: { id: \"5\" } },\n  ];\n\n  return {\n    paths,\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps({ query, params }) {\n  const { id } = query || params;\n  console.log({ id });\n\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/posts/\" + id);\n  const postData = await res.json();\n\n  return {\n    props: {\n      postData,\n    },\n  };\n}\n\n/*\nexport async function getServerSideProps({ query }) {\n  const { id } = query;\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/posts/\" + id);\n  const postData = await res.json();\n  return {\n    props: {\n      postData,\n    },\n  };\n}\n*/\n"]},"metadata":{},"sourceType":"module"}